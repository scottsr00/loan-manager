generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entity {
  id                     String            @id  // LEI
  legalName              String
  dba                    String?
  taxId                  String?
  countryOfIncorporation String?
  status                 String            @default("ACTIVE")
  isAgent               Boolean           @default(false)
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  addresses              Address[]
  contacts               Contact[]
  counterparty           Counterparty?
  lender                 Lender?
  borrower              Borrower?
  kyc                    KYC?
  beneficialOwners       BeneficialOwner[]
  creditAgreements       CreditAgreement[] @relation("LenderCreditAgreements")
  positionHistory        LenderPositionHistory[]
}

model KYC {
  id                    String            @id @default(cuid())
  entityId              String            @unique  // References Entity (LEI)
  verificationStatus    String            @default("PENDING")  // PENDING, VERIFIED, REJECTED
  lenderVerified        Boolean           @default(false)      // Can act as a lender
  counterpartyVerified  Boolean           @default(false)      // Can act as a counterparty
  lastVerificationDate  DateTime?
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  entity                Entity            @relation(fields: [entityId], references: [id])

  @@index([entityId])
}

model Address {
  id         String   @id @default(cuid())
  entityId   String?  // Optional reference to Entity
  counterpartyId String? // Optional reference to Counterparty
  type       String
  street1    String
  street2    String?
  city       String
  state      String?
  postalCode String?
  country    String
  isPrimary  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  entity     Entity?  @relation(fields: [entityId], references: [id])
  counterparty Counterparty? @relation(fields: [counterpartyId], references: [id])

  @@index([entityId])
  @@index([counterpartyId])
}

model Contact {
  id        String   @id @default(cuid())
  entityId  String
  type      String
  firstName String
  lastName  String
  title     String?
  email     String?
  phone     String?
  isPrimary Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  entity    Entity   @relation(fields: [entityId], references: [id])

  @@index([entityId])
}

model BeneficialOwner {
  id                  String    @id @default(cuid())
  entityId            String
  name                String
  dateOfBirth         DateTime?
  nationality         String?
  ownershipPercentage Float
  controlType         String
  verificationStatus  String
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  entity              Entity    @relation(fields: [entityId], references: [id])

  @@index([entityId])
}

model Borrower {
  id                    String            @id @default(cuid())
  entityId              String            @unique
  name                  String
  taxId                 String?
  countryOfIncorporation String?
  industrySegment       String?
  businessType          String?
  creditRating          String?
  ratingAgency          String?
  riskRating            String?
  onboardingStatus      String            @default("PENDING")
  kycStatus             String            @default("PENDING")
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  entity                Entity            @relation(fields: [entityId], references: [id])
  creditAgreements      CreditAgreement[]

  @@index([entityId])
}

model Lender {
  id                String             @id @default(cuid())
  entityId          String             @unique
  status            String             @default("ACTIVE")
  onboardingDate    DateTime           @default(now())
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  facilityPositions FacilityPosition[]
  entity            Entity             @relation(fields: [entityId], references: [id])

  @@index([entityId])
}

model CreditAgreement {
  id              String               @id @default(cuid())
  agreementNumber String               @unique
  borrowerId      String
  lenderId        String
  status          String               @default("ACTIVE")
  amount          Float
  currency        String               @default("USD")
  startDate       DateTime
  maturityDate    DateTime
  interestRate    Float
  description     String?
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  borrower        Borrower             @relation(fields: [borrowerId], references: [id])
  lender          Entity               @relation("LenderCreditAgreements", fields: [lenderId], references: [id])
  facilities      Facility[]
  transactions    TransactionHistory[]

  @@index([borrowerId])
  @@index([lenderId])
}

model Facility {
  id                   String                @id @default(cuid())
  facilityName         String
  facilityType         String
  creditAgreementId    String
  commitmentAmount     Float
  availableAmount      Float
  currency             String                @default("USD")
  startDate            DateTime
  maturityDate         DateTime
  interestType         String
  baseRate             String
  margin              Float
  status              String                @default("ACTIVE")
  description          String?
  createdAt            DateTime              @default(now())
  updatedAt            DateTime              @updatedAt
  creditAgreement      CreditAgreement       @relation(fields: [creditAgreementId], references: [id])
  positions            FacilityPosition[]
  sublimits            FacilitySublimit[]
  loans                Loan[]
  servicingActivities  ServicingActivity[]
  trades               Trade[]
  positionHistory      LenderPositionHistory[]

  @@index([creditAgreementId])
}

model FacilityPosition {
  id         String   @id @default(cuid())
  facilityId String
  lenderId   String
  amount     Float
  share      Float
  status     String   @default("ACTIVE")
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  facility   Facility @relation(fields: [facilityId], references: [id])
  lender     Lender   @relation(fields: [lenderId], references: [id])

  @@index([facilityId])
  @@index([lenderId])
}

model FacilitySublimit {
  id          String   @id @default(cuid())
  facilityId  String
  type        String
  amount      Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  facility    Facility @relation(fields: [facilityId], references: [id])

  @@index([facilityId])
}

model Loan {
  id                String               @id @default(cuid())
  facilityId        String
  amount            Float
  outstandingAmount Float
  currency          String               @default("USD")
  status            String               @default("ACTIVE")
  interestPeriod    String               @default("1M")
  drawDate          DateTime             @default(now())
  baseRate          Decimal              @db.Decimal(7,5)
  effectiveRate     Decimal              @db.Decimal(7,5)
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
  facility          Facility             @relation(fields: [facilityId], references: [id])
  transactions      TransactionHistory[]

  @@index([facilityId])
}

model Trade {
  id                    String            @id @default(cuid())
  facilityId            String
  sellerCounterpartyId  String
  buyerCounterpartyId   String
  tradeDate             DateTime          @default(now())
  settlementDate        DateTime
  parAmount             Float
  price                 Float
  description          String?
  status               String            @default("PENDING")
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  facility             Facility          @relation(fields: [facilityId], references: [id])
  sellerCounterparty   Counterparty      @relation("SellerCounterpartyTrades", fields: [sellerCounterpartyId], references: [id])
  buyerCounterparty    Counterparty      @relation("BuyerCounterpartyTrades", fields: [buyerCounterpartyId], references: [id])
  transactions         TransactionHistory[]

  @@index([facilityId])
  @@index([sellerCounterpartyId])
  @@index([buyerCounterpartyId])
}

model TransactionHistory {
  id                  String             @id @default(cuid())
  creditAgreementId   String?
  loanId              String?
  tradeId             String?
  servicingActivityId String?
  activityType        String
  amount              Float
  currency            String             @default("USD")
  status              String             @default("PENDING")
  description         String?
  effectiveDate       DateTime
  processedBy         String
  createdAt           DateTime           @default(now())
  updatedAt           DateTime           @updatedAt
  creditAgreement     CreditAgreement?   @relation(fields: [creditAgreementId], references: [id])
  loan                Loan?              @relation(fields: [loanId], references: [id])
  servicingActivity   ServicingActivity? @relation(fields: [servicingActivityId], references: [id])
  trade               Trade?             @relation(fields: [tradeId], references: [id])

  @@index([creditAgreementId])
  @@index([loanId])
  @@index([tradeId])
  @@index([servicingActivityId])
}

model ServicingActivity {
  id           String               @id @default(cuid())
  facilityId   String
  activityType String
  dueDate      DateTime
  description  String?
  amount       Float
  status       String               @default("PENDING")
  completedAt  DateTime?
  completedBy  String?
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  facility     Facility             @relation(fields: [facilityId], references: [id])
  transactions TransactionHistory[]

  @@index([facilityId])
}

model Counterparty {
  id                    String            @id @default(cuid())
  entityId              String            @unique
  name                  String
  type                  CounterpartyType  @relation(fields: [typeId], references: [id])
  typeId                String
  status                String            @default("ACTIVE")
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  entity                Entity            @relation(fields: [entityId], references: [id])
  addresses             Address[]
  contacts              CounterpartyContact[]
  salesTrades          Trade[]           @relation("SellerCounterpartyTrades")
  purchaseTrades       Trade[]           @relation("BuyerCounterpartyTrades")
  servicingAssignments ServicingAssignment[]

  @@index([entityId])
  @@index([typeId])
}

model CounterpartyType {
  id           String        @id @default(cuid())
  name         String        @unique
  description  String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  counterparties Counterparty[]
}

model CounterpartyContact {
  id             String      @id @default(cuid())
  counterpartyId String
  type           String
  firstName      String
  lastName       String
  title          String?
  email          String?
  phone          String?
  isPrimary      Boolean     @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  counterparty   Counterparty @relation(fields: [counterpartyId], references: [id])

  @@index([counterpartyId])
}

model ServicingRole {
  id           String                @id @default(cuid())
  name         String                @unique
  description  String?
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt
  assignments  ServicingAssignment[]
}

model ServicingTeamMember {
  id             String                @id @default(cuid())
  assignmentId   String
  firstName      String
  lastName       String
  email          String
  phone          String?
  title          String?
  status         String                @default("ACTIVE")
  createdAt      DateTime              @default(now())
  updatedAt      DateTime              @updatedAt
  assignment     ServicingAssignment   @relation(fields: [assignmentId], references: [id])

  @@index([assignmentId])
}

model ServicingAssignment {
  id             String          @id @default(cuid())
  counterpartyId String
  roleId         String
  startDate      DateTime
  endDate        DateTime?
  status         String          @default("ACTIVE")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  counterparty   Counterparty    @relation(fields: [counterpartyId], references: [id])
  role           ServicingRole   @relation(fields: [roleId], references: [id])
  teamMembers    ServicingTeamMember[]

  @@index([counterpartyId])
  @@index([roleId])
}

enum PositionChangeType {
  PAYDOWN
  ACCRUAL
  TRADE
}

model LenderPositionHistory {
  id                      String            @id @default(cuid())
  facilityId             String
  lenderId               String
  changeDateTime         DateTime          @default(now())
  changeType             PositionChangeType
  previousOutstandingAmount Float
  newOutstandingAmount   Float
  previousAccruedInterest Float
  newAccruedInterest     Float
  changeAmount           Float
  userId                 String
  notes                  String?
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt
  
  // Relations
  facility               Facility          @relation(fields: [facilityId], references: [id])
  lender                 Entity            @relation(fields: [lenderId], references: [id])

  @@index([facilityId])
  @@index([lenderId])
}
