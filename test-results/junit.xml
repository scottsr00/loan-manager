<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="58" failures="0" errors="0" time="0.918">
  <testsuite name="Facility Position Management" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.222" tests="8">
    <testcase classname="Facility Position Management Position Creation should create a facility position within available amount" name="Facility Position Management Position Creation should create a facility position within available amount" time="0.003">
    </testcase>
    <testcase classname="Facility Position Management Position Creation should reject position exceeding facility available amount" name="Facility Position Management Position Creation should reject position exceeding facility available amount" time="0.014">
    </testcase>
    <testcase classname="Facility Position Management Position Creation should validate total positions do not exceed facility commitment" name="Facility Position Management Position Creation should validate total positions do not exceed facility commitment" time="0.002">
    </testcase>
    <testcase classname="Facility Position Management Position Creation should validate position amount covers pro-rata share of loans" name="Facility Position Management Position Creation should validate position amount covers pro-rata share of loans" time="0.001">
    </testcase>
    <testcase classname="Facility Position Management Position Updates should update position amount within available limits" name="Facility Position Management Position Updates should update position amount within available limits" time="0.001">
    </testcase>
    <testcase classname="Facility Position Management Position Updates should reject updates that would exceed facility commitment" name="Facility Position Management Position Updates should reject updates that would exceed facility commitment" time="0.002">
    </testcase>
    <testcase classname="Facility Position Management Position Updates should validate position status transitions" name="Facility Position Management Position Updates should validate position status transitions" time="0.001">
    </testcase>
    <testcase classname="Facility Position Management Position Updates should validate total shares do not exceed 100%" name="Facility Position Management Position Updates should validate total shares do not exceed 100%" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Credit Agreement Tests" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.054" tests="10">
    <testcase classname="Credit Agreement Tests createCreditAgreement should create a credit agreement with valid inputs" name="Credit Agreement Tests createCreditAgreement should create a credit agreement with valid inputs" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests createCreditAgreement should throw error if borrower does not exist" name="Credit Agreement Tests createCreditAgreement should throw error if borrower does not exist" time="0.002">
    </testcase>
    <testcase classname="Credit Agreement Tests createCreditAgreement should throw error if lender does not exist" name="Credit Agreement Tests createCreditAgreement should throw error if lender does not exist" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests createCreditAgreement should validate maturity date is after start date" name="Credit Agreement Tests createCreditAgreement should validate maturity date is after start date" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests createCreditAgreement should validate positive amount and interest rate" name="Credit Agreement Tests createCreditAgreement should validate positive amount and interest rate" time="0.005">
    </testcase>
    <testcase classname="Credit Agreement Tests createCreditAgreement should validate at least one facility is provided" name="Credit Agreement Tests createCreditAgreement should validate at least one facility is provided" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests updateCreditAgreement should update credit agreement with valid changes" name="Credit Agreement Tests updateCreditAgreement should update credit agreement with valid changes" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests updateCreditAgreement should throw error if agreement does not exist" name="Credit Agreement Tests updateCreditAgreement should throw error if agreement does not exist" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests updateCreditAgreement should validate status transitions" name="Credit Agreement Tests updateCreditAgreement should validate status transitions" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Tests updateCreditAgreement should validate amount changes" name="Credit Agreement Tests updateCreditAgreement should validate amount changes" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Servicing Activity Tests" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.068" tests="9">
    <testcase classname="Servicing Activity Tests addServicingActivity should create a servicing activity" name="Servicing Activity Tests addServicingActivity should create a servicing activity" time="0">
    </testcase>
    <testcase classname="Servicing Activity Tests addServicingActivity should throw error if facility does not exist" name="Servicing Activity Tests addServicingActivity should throw error if facility does not exist" time="0.002">
    </testcase>
    <testcase classname="Servicing Activity Tests addServicingActivity should validate required fields" name="Servicing Activity Tests addServicingActivity should validate required fields" time="0.001">
    </testcase>
    <testcase classname="Servicing Activity Tests processPaydown should process a paydown without creating duplicate servicing activity" name="Servicing Activity Tests processPaydown should process a paydown without creating duplicate servicing activity" time="0.001">
    </testcase>
    <testcase classname="Servicing Activity Tests processPaydown should create new servicing activity if no existing activity provided" name="Servicing Activity Tests processPaydown should create new servicing activity if no existing activity provided" time="0">
    </testcase>
    <testcase classname="Servicing Activity Tests processPaydown should throw error if paydown amount exceeds outstanding balance" name="Servicing Activity Tests processPaydown should throw error if paydown amount exceeds outstanding balance" time="0.005">
    </testcase>
    <testcase classname="Servicing Activity Tests updateServicingActivity should update activity status and process paydown when completed" name="Servicing Activity Tests updateServicingActivity should update activity status and process paydown when completed" time="0">
    </testcase>
    <testcase classname="Servicing Activity Tests updateServicingActivity should throw error if activity does not exist" name="Servicing Activity Tests updateServicingActivity should throw error if activity does not exist" time="0.002">
    </testcase>
    <testcase classname="Servicing Activity Tests updateServicingActivity should clear completion fields when status is not COMPLETED" name="Servicing Activity Tests updateServicingActivity should clear completion fields when status is not COMPLETED" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Borrower Tests" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.043" tests="8">
    <testcase classname="Borrower Tests createBorrower should create a borrower with valid inputs" name="Borrower Tests createBorrower should create a borrower with valid inputs" time="0.001">
    </testcase>
    <testcase classname="Borrower Tests createBorrower should validate required fields" name="Borrower Tests createBorrower should validate required fields" time="0.001">
    </testcase>
    <testcase classname="Borrower Tests createBorrower should validate onboarding status" name="Borrower Tests createBorrower should validate onboarding status" time="0.001">
    </testcase>
    <testcase classname="Borrower Tests createBorrower should validate KYC status" name="Borrower Tests createBorrower should validate KYC status" time="0">
    </testcase>
    <testcase classname="Borrower Tests updateBorrower should update borrower with valid changes" name="Borrower Tests updateBorrower should update borrower with valid changes" time="0.001">
    </testcase>
    <testcase classname="Borrower Tests updateBorrower should throw error if borrower does not exist" name="Borrower Tests updateBorrower should throw error if borrower does not exist" time="0">
    </testcase>
    <testcase classname="Borrower Tests updateBorrower should validate status transitions" name="Borrower Tests updateBorrower should validate status transitions" time="0">
    </testcase>
    <testcase classname="Borrower Tests updateBorrower should validate KYC status transitions" name="Borrower Tests updateBorrower should validate KYC status transitions" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Counterparty Tests" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.038" tests="4">
    <testcase classname="Counterparty Tests createCounterparty should create a counterparty with valid inputs" name="Counterparty Tests createCounterparty should create a counterparty with valid inputs" time="0.001">
    </testcase>
    <testcase classname="Counterparty Tests createCounterparty should validate required fields" name="Counterparty Tests createCounterparty should validate required fields" time="0.002">
    </testcase>
    <testcase classname="Counterparty Tests updateCounterparty should update counterparty with valid changes" name="Counterparty Tests updateCounterparty should update counterparty with valid changes" time="0.001">
    </testcase>
    <testcase classname="Counterparty Tests updateCounterparty should throw error if counterparty does not exist" name="Counterparty Tests updateCounterparty should throw error if counterparty does not exist" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Loan Tests" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.043" tests="8">
    <testcase classname="Loan Tests createLoan should create a loan with valid inputs" name="Loan Tests createLoan should create a loan with valid inputs" time="0.002">
    </testcase>
    <testcase classname="Loan Tests createLoan should validate required fields" name="Loan Tests createLoan should validate required fields" time="0.002">
    </testcase>
    <testcase classname="Loan Tests createLoan should validate position amounts match loan amount" name="Loan Tests createLoan should validate position amounts match loan amount" time="0">
    </testcase>
    <testcase classname="Loan Tests createLoan should validate positive amounts" name="Loan Tests createLoan should validate positive amounts" time="0.001">
    </testcase>
    <testcase classname="Loan Tests updateLoan should update loan with valid changes" name="Loan Tests updateLoan should update loan with valid changes" time="0">
    </testcase>
    <testcase classname="Loan Tests updateLoan should throw error if loan does not exist" name="Loan Tests updateLoan should throw error if loan does not exist" time="0.001">
    </testcase>
    <testcase classname="Loan Tests updateLoan should validate status transitions" name="Loan Tests updateLoan should validate status transitions" time="0.001">
    </testcase>
    <testcase classname="Loan Tests updateLoan should validate amount is not greater than original amount" name="Loan Tests updateLoan should validate amount is not greater than original amount" time="0">
    </testcase>
  </testsuite>
  <testsuite name="Facility Management" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.036" tests="6">
    <testcase classname="Facility Management createFacility should create a facility within credit agreement limits" name="Facility Management createFacility should create a facility within credit agreement limits" time="0.001">
    </testcase>
    <testcase classname="Facility Management createFacility should reject if facility amount exceeds credit agreement amount" name="Facility Management createFacility should reject if facility amount exceeds credit agreement amount" time="0.002">
    </testcase>
    <testcase classname="Facility Management createFacility should reject if facility currency does not match credit agreement" name="Facility Management createFacility should reject if facility currency does not match credit agreement" time="0">
    </testcase>
    <testcase classname="Facility Management createFacility should reject if facility maturity date exceeds credit agreement" name="Facility Management createFacility should reject if facility maturity date exceeds credit agreement" time="0.001">
    </testcase>
    <testcase classname="Facility Management createFacility should validate required fields" name="Facility Management createFacility should validate required fields" time="0.001">
    </testcase>
    <testcase classname="Facility Management createFacility should validate facility type" name="Facility Management createFacility should validate facility type" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="Credit Agreement Management" errors="0" failures="0" skipped="0" timestamp="2024-12-27T14:24:34" time="0.037" tests="5">
    <testcase classname="Credit Agreement Management Credit Agreement Updates should update credit agreement details while preserving facility relationships" name="Credit Agreement Management Credit Agreement Updates should update credit agreement details while preserving facility relationships" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Management Credit Agreement Updates should reject updates that would make facility commitments exceed new credit agreement amount" name="Credit Agreement Management Credit Agreement Updates should reject updates that would make facility commitments exceed new credit agreement amount" time="0.002">
    </testcase>
    <testcase classname="Credit Agreement Management Credit Agreement Updates should reject updates that would make facility maturity dates invalid" name="Credit Agreement Management Credit Agreement Updates should reject updates that would make facility maturity dates invalid" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Management Credit Agreement Updates should reject currency changes when facilities exist" name="Credit Agreement Management Credit Agreement Updates should reject currency changes when facilities exist" time="0.001">
    </testcase>
    <testcase classname="Credit Agreement Management Credit Agreement Updates should validate required fields" name="Credit Agreement Management Credit Agreement Updates should validate required fields" time="0.003">
    </testcase>
  </testsuite>
</testsuites>